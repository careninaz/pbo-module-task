// SuperClass Vga
using System;

class Vga
{
    public string merk;

    // Konstruktor Vga dengan parameter untuk menginisialisasi merk
    public Vga(string _merk)
    {
        this.merk = _merk;
    }
}

// SubClass AMD Pewarisan Dari Superclass Vga
class AMD : Vga
{

    // Konstruktor AMD, menginisialisasi merk "AMD" melalui konstruktor superclass
    public AMD() : base("AMD")
    {

    }
}

// SubClass Nvidia Pewarisan Dari SuperClass Vga
class Nvidia : Vga
{
    // Konstruktor Nvidia, menginisialisasi merk "Nvidia" melalui konstruktor superclass
    public Nvidia() : base("Nvidia")
    {

    }
}

// SuperClass Processor
class Processor
{
    public string merk;
    public string tipe;

    // Konstruktor Processor dengan parameter untuk menginisialisasi merk dan tipe.
    public Processor(string _merk, string _tipe)
    {
        this.merk = _merk;
        this.tipe = _tipe;
    }
}

// SubClass Intel Pewarisan Dari SuperClass Processor
class Intel : Processor
{
    // Konstruktor Intel, menginisialisasi merk "Intel" dan tipe melalui konstruktor superclass
    public Intel(string _tipe) : base("Intel", _tipe)
    {

    }
}

// SubClass AMD Pewarisan Dari SuperClass Processor
class AMDProcessor : Processor
{
    // Konstruktor AMDProcessor, menginisialisasi merk "AMD" dan tipe melalui konstruktor superclass
    public AMDProcessor(string _tipe) : base("AMD", _tipe)
    {

    }
}

// SubClass CoreI3 Pewarisan Dari SuperClass Intel & Pewarisan Dari SuperClass Processor
class CoreI3 : Intel
{
    // Konstruktor CoreI3, menginisialisasi merk "Intel" dan tipe "Core i3" melalui konstruktor superclass
    public CoreI3() : base("Core i3")
    {

    }
}

// SubClass CoreI5 Pewarisan Dari SuperClass Intel & Pewarisan Dari SuperClass Processor
class CoreI5 : Intel
{
    // Konstruktor CoreI5, menginisialisasi merk "Intel" dan tipe "Core i5" melalui konstruktor superclass
    public CoreI5() : base("Core i5")
    {

    }
}

// SubClass CoreI7 Pewarisan Dari SuperClass Intel & Pewarisan Dari SuperClass Processor
class CoreI7 : Intel
{
    // Konstruktor CoreI7, menginisialisasi merk "Intel" dan tipe "Core i7" melalui konstruktor superclass
    public CoreI7() : base("Core i7")
    {

    }
}

// SubClass Ryzen Pewarisan Dari SuperClass AMDProcessor & Pewarisan Dari SuperClass Processor
class Ryzen : AMDProcessor
{
    // Konstruktor Ryzen, menginisialisasi merk "AMD" dan tipe "RAYZEN" melalui konstruktor superclass
    public Ryzen() : base("RAYZEN")
    {

    }
}

// SubClass Athlon Pewarisan Dari SuperClass AMDProcessor & Pewarisan Dari SuperClass Processor
class Athlon : AMDProcessor
{
    // Konstruktor Athlon, menginisialisasi merk "AMD" dan tipe "ATHLON" melalui konstruktor superclass
    public Athlon() : base("ATHLON")
    {

    }
}

// SuperClass Laptop
class Laptop
{
    public string merk;
    public string tipe;
    public Vga vga;
    public Processor processor;

    // Konstruktor Laptop dengan parameter untuk menginisialisasi atribut-atributnya.
    public Laptop(string _merk, string _tipe, Vga _vga, Processor _processor)
    {
        this.merk = _merk;
        this.tipe = _tipe;
        this.vga = _vga;
        this.processor = _processor;
    }

    // Method LaptopDinyalakan() 
    public void LaptopDinyalakan()
    {
        Console.WriteLine("Laptop " + merk + " " + tipe + " menyala");
    }

    // Method LaptopDimatikan() 
    public void LaptopDimatikan()
    {
        Console.WriteLine("Laptop " + merk + " " + tipe + " mati");
    }
}

// SubClass ASUS Pewarisan Dari SuperClass Laptop
class ASUS : Laptop
{
    // Konstruktor ASUS dengan parameter untuk menginisialisasi atribut-atributnya
    public ASUS(string _tipe, Vga _vga, Processor _processor) : base("ASUS", _tipe, _vga, _processor)
    {

    }
}

// SubClass ACER Pewarisan Dari SuperClass Laptop
class ACER : Laptop
{
    // Konstruktor ACER dengan parameter untuk menginisialisasi atribut-atributnya
    public ACER(string _tipe, Vga _vga, Processor _processor) : base("ACER", _tipe, _vga, _processor)
    {

    }
}

// SubClass Lenovo Pewarisan Dari SuperClass Laptop
class Lenovo : Laptop
{
    // Konstruktor Lenovo dengan parameter untuk menginisialisasi atribut-atributnya
    public Lenovo(string _tipe, Vga _vga, Processor _processor) : base("Lenovo", _tipe, _vga, _processor)
    {

    }
}

// SubClass ROG Pewarisan Dari SuperClass ASUS & Pewarisan Dari SuperClass Laptop
class ROG : ASUS
{
    // Konstruktor ROG dengan parameter untuk menginisialisasi atribut-atributnya
    public ROG(Vga _vga, Processor _processor) : base("ROG", _vga, _processor)
    {

    }
}

// SubClass Vivobook Pewarisan Dari SuperClass ASUS & Pewarisan Dari SuperClass Laptop
class Vivobook : ASUS
{
    // Konstruktor Vivobook dengan parameter untuk menginisialisasi atribut-atributnya
    public Vivobook(Vga _vga, Processor _processor) : base("Vivobook", _vga, _processor)
    {

    }

    // Method Ngoding() 
    public void Ngoding()
    {
        Console.WriteLine("Ctak, Ctak, Ctak, error lagi!!");
    }
}

// SubClass Swift Pewarisan Dari SuperClass ACER & Pewarisan Dari SuperClass Laptop
class Swift : ACER
{
    // Konstruktor Swift dengan parameter untuk menginisialisasi atribut-atributnya
    public Swift(Vga _vga, Processor _processor) : base("Swift", _vga, _processor)
    {

    }
}

// SubClass Predator Pewarisan Dari SuperClass ACER & Pewarisan Dari SuperClass Laptop
class Predator : ACER
{
    // Konstruktor Predator dengan parameter untuk menginisialisasi atribut-atributnya
    public Predator(Vga _vga, Processor _processor) : base("Predator", _vga, _processor)
    {

    }

    // Method BermainGame() 
    public void BermainGame()
    {
        Console.WriteLine("Laptop " + merk + " " + tipe + " sedang memainkan game");
    }
}

// SubClass IdeaPad Pewarisan Dari SuperClass Lenovo & Pewarisan Dari SuperClass Laptop
class IdeaPad : Lenovo
{
    // Konstruktor IdeaPad dengan parameter untuk menginisialisasi atribut-atributnya
    public IdeaPad(Vga _vga, Processor _processor) : base("IdeaPad", _vga, _processor)
    {

    }
}

// SubClass Legion Pewarisan Dari SuperClass Lenovo & Pewarisan Dari SuperClass Laptop
class Legion : Lenovo
{
    // Konstruktor Legion dengan parameter untuk menginisialisasi atribut-atributnya.
    public Legion(Vga _vga, Processor _processor) : base("Legion", _vga, _processor)
    {

    }
}




class Program
{
    static void Main(string[] args)
    {
        // No 1
        Laptop laptop2 = new Lenovo("ThinkPad", new Nvidia(), new Intel("Core i5"));
        laptop2.LaptopDinyalakan();  // Menyala
        laptop2.LaptopDimatikan();   // Mati

        // No 2
        Laptop laptop1 = new Vivobook(new Nvidia(), new Intel("Core i5"));
        //laptop1.Ngoding();  // Ctak, Ctak, Ctak, error lagi!!

        // No 3
        Console.WriteLine("Spesifikasi Laptop 1:");
        Console.WriteLine("Merk VGA: " + laptop1.vga.merk);
        Console.WriteLine("Merk Processor: " + laptop1.processor.merk);
        Console.WriteLine("Tipe Processor: " + laptop1.processor.tipe);

        // No 4
        Predator predator = new Predator(new Nvidia(), new Intel("Core i7"));
        predator.BermainGame();  // Laptop Predator sedang memainkan game

        //No 5
        //ACER acer = new Predator(new Nvidia(), new Intel("Core i7"));
        //acer.BermainGame();  // Error: Tidak dapat memanggil method BermainGame() pada ACER

    }
}
